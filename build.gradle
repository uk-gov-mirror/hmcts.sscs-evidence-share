plugins {
  id 'application'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.3.5.RELEASE'
  id 'uk.gov.hmcts.java' version '0.12.8'
  id 'com.github.ben-manes.versions' version '0.38.0'
  id 'org.owasp.dependencycheck' version '6.1.5'
  id 'org.sonarqube' version '3.1.1'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
  e2e {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/e2e/java')
    }
    resources.srcDir file('src/e2e/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked"
}

test {
  useJUnitPlatform()
}

task functional(type: Test) {
  useJUnitPlatform()
  maxParallelForks = 1
  group = 'verification'
  description = 'Executes non-destructive functional tests in AAT against a running CCD and evidence share service'
  setTestClassesDirs(sourceSets.e2e.output.classesDirs)
  setClasspath(sourceSets.e2e.runtimeClasspath)
  include "uk/gov/hmcts/reform/sscs/functional/**"
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath

}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

configurations {
  integrationTestCompile.extendsFrom(testCompile)
  integrationTestRuntime.extendsFrom(testRuntime)
  e2eCompile.extendsFrom(testCompile)
  e2eRuntime.extendsFrom(testRuntime)
  smokeTestCompile.extendsFrom(testCompile)
  smokeTestRuntime.extendsFrom(testRuntime)

  testCompile.exclude module: "android-json"
  testRuntime.exclude module: "android-json"
  integrationTestCompile.exclude module: "android-json"
  integrationTestRuntime.exclude module: "android-json"
}

pmd {
  toolVersion = "6.9.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.e2e, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
check.dependsOn integration
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
integration.shouldRunAfter(checkstyleIntegrationTest)
integration.shouldRunAfter(test)
functional.shouldRunAfter(checkstyleIntegrationTest)
functional.shouldRunAfter(test)

sonarqube {
  properties {
    property "sonar.exclusions",
      "src/main/java/uk/gov/hmcts/reform/sscs/config/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/servicebus/messaging/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/domain/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/model/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/docmosis/domain/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/docmosis/config/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/SscsEvidenceShareApplication.java,"
    property "sonar.projectName", "Reform :: sscs-evidence-share"
    property "sonar.projectKey", "uk.gov.hmcts.reform:sscs-evidence-share"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

repositories {

  mavenLocal()

  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  mavenCentral()
  jcenter()

  // jitpack should be last resort
  // see: https://github.com/jitpack/jitpack.io/issues/1939
  maven { url 'https://jitpack.io' }
  maven {
    url 'https://repo.spring.io/libs-milestone'
  }
}

// it is important to specify logback classic and core packages explicitly as libraries like spring boot
// enforces it's own (older) version which is not recommended.
def versions = [
  junit           : '5.7.1',
  junitPlatform   : '1.7.1',
  reformLogging: '5.1.7',
  springBoot: springBoot.class.package.implementationVersion,
  springfoxSwagger: '2.9.2',
  lombok: '1.18.16',
  restAssured: '4.3.1'
]

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group == 'org.codehaus.groovy') {
        // CVE-2020-17521
        details.useVersion "3.0.7"
        details.because "needed by rest-assured>=4.3"
      }
    }
  }
}

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.vintage:junit-vintage-engine:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}",
  ]
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  compile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  compile group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  compile group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
  compile group: 'org.elasticsearch', name: 'elasticsearch', version: '7.12.0'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.1.0'
  compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.7.RELEASE'

  compile group: 'org.springframework', name: 'spring-jms'
  compile group: 'org.apache.qpid', name: 'qpid-jms-client', version: '0.58.0'
  compileOnly 'org.projectlombok:lombok:1.18.20'

  annotationProcessor "org.projectlombok:lombok:1.18.18"

  compile group: 'uk.gov.hmcts.reform', name: 'send-letter-client', version: '3.0.3'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.4'

  compile group: 'com.github.hmcts', name: 'sscs-common', version: '4.3.1-RC-8995'
  compile group: 'com.github.hmcts', name: 'sscs-pdf-email-common', version: '1.4.33'

  //Remove when our dependencies pull in this version or later
  compile 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

  compile 'com.launchdarkly:launchdarkly-java-server-sdk:5.3.1'

  integrationTestCompile 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

  testImplementation libraries.junit5
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

  testCompile 'pl.pragmatists:JUnitParams:1.1.1'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
  testCompile group: 'io.github.artsok', name: 'rerunner-jupiter', version: '2.1.6'

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  e2eCompileOnly 'org.projectlombok:lombok:1.18.20'
  e2eAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

}

dependencyManagement {
  dependencies {
    dependency group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    dependency group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    dependency group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.14.1'

    // resolves: CVE-2019-10101, CVE-2019-10102, CVE-2019-10103
    dependencySet(group: 'org.jetbrains.kotlin', version: '1.4.32') {
      entry 'kotlin-stdlib'
    }

    // CVE-2020-13934, CVE-2020-13935 Java and Command Line injections in Windows
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.43') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }

    // solves CVE-2019-12086
    // remove once spring manager incorporates this changes
    dependencySet(group: 'com.fasterxml.jackson.core', version: '2.11.3') {
      entry 'jackson-core'
      entry 'jackson-databind'
    }

    // CVE-2019-16869 - brought in by qpid-jms-client
    dependencySet(group: 'io.netty', version: '4.1.63.Final') {
      entry 'netty-handler'
      entry 'netty-transport-native-epoll'
      entry 'netty-transport-native-kqueue'
      entry 'netty-codec-http'
      entry 'netty-codec'
      entry 'netty-transport-native-unix-common'
      entry 'netty-transport'
      entry 'netty-buffer'
      entry 'netty-resolver'
      entry 'netty-common'
    }

    //to remove CVE-2018-10237
    dependencySet(group: 'com.google.guava', version: '30.1.1-jre') {
      entry 'guava'
    }

    //CVE-2021-22112
    dependencySet(group: 'org.springframework.security', version: '5.4.6') {
      entry 'spring-security-crypto'
    }

    //CVE-2021-27807
    dependencySet(group: 'org.apache.pdfbox', version: '2.0.23') {
      entry 'pdfbox-tools'
      entry 'preflight'
    }

    dependencySet(group: 'org.apache.xmlgraphics', version: '1.14') {
      entry 'batik-all'
    }

    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR10"
    }
  }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

run {
  def debug = System.getProperty("debug")
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']
  }
}

mainClassName = 'uk.gov.hmcts.reform.sscs.SscsEvidenceShareApplication'

bootJar {
  getArchiveFileName().set(provider {
    'sscs-evidence-share.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}
